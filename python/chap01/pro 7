def gcd(a, b) :     #3번문제

    alist = []

    for i in range(1, a + 1) :        #첫번째 반복문.
        if a % i == 0 :
            alist.append(i)        
    print("%d 의 약수 = "% a, alist)        #첫번째 출력

    for i in range(len(alist) - 1, 0, -1) :         #두번째 반복문
        if b % alist[i] == 0 :
            return alist[i]
print(gcd(60,28))           #두번의 반복문이 있음

# 위의 코드는 두번의 반복문을 이용하여 코드를 진행하지만 
# 아래의 코드는 한번의 반복문을 사용하여 코드를 진행하므로 아래의 코드의 시간적 효율이 좋음.

def gcd(a, b):      #1-7의 코드
    print('gcd', (a,b))
    while b != 0:           #한번의 반복문
        r = a % b
        a = b
        b = r
        print('gcd', (a,b))     #한번의 출력
    return a
print('60과 28의 최대공약수 =', gcd(60,28))